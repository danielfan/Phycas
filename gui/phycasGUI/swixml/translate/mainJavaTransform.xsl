<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0" xmlns:phyc="http://commandLanguage.phycas.org">
  <xsl:output method="text"/>
<xsl:template match="/">
<xsl:text>
/*
 * This file is automatically generated.  Do not modify.
 */

package phycasGUI.swixml;

import phycasGUI.network.*;
import phycasGUI.swixml.handler.*;
import org.phycas.commandLanguage.*; 

import org.swixml.SwingEngine;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.StringTokenizer;
import javax.swing.text.*;
import java.util.HashMap;
import java.io.*;
import javax.help.*;
import java.net.URL;

/**
 * Main GUI WIndow of Phycas
 * @author  Vanessa Jackson
 */
public class PhycasMain extends Thread {
    
    public static final String SUCCESS_MSG = "\nWrote nexus command";
    public static final String ATTEMPT_MSG = "\nTrying to write nexus command";
    public static final String WRITE_ERR_MSG = "\nUnable to write nexus command.";

    private SwingEngine swix = new SwingEngine(this);
    public PhycasSocket socket;
    public PhycasChart phycasChart;
    
    private String lastPageViewed = "";

	// declared here because rendered by swixml
    public JFrame frame; //main frame
    public JFrame output; //output frame
    public JTabbedPane tpOutput; //tabs in output window
    public JFileChooser fc; // file selection dialog
    public JMenuBar mb; //menu bar
    public JMenu menu_file; //file menu 
    public JMenu menu_print; //file print menu 
    public JMenu menu_save; //file save menu 
    public JMenu menu_close; //file close menu 
    public JMenu menu_edit; //edit menu 
    public JMenu menu_prop; //edit properties menu 
    public JMenu menu_settings; //settings menu
    public JMenuItem mi_settings_displayWarnings; //choose to display warnings
    public JMenuItem mi_settings_logWarnings; //choose to log warnings
    public JMenu menu_help; // help menu
    public JMenuItem mi_help; // launch help
    public JMenuItem mi_help_context; // launch context sensitive help
    public JMenuItem mi_welcome; //welcome panel
    public JPanel pnl; //main panel
    public JTextArea taMsgs;  //message area
    public JTextArea taOutput;  //output area
    public JTextField tfCommand; // command line

    // SetManagers
    public PhycasSetManager charSetMgr = new PhycasSetManager("char");
    public PhycasSetManager taxSetMgr = new PhycasSetManager("tax");
    public PhycasSetManager treeSetMgr = new PhycasSetManager("tree");

	// Output Window
	public PhycasOutput phycasOutput = new PhycasOutput(this);
    public Action showAction_Output = phycasOutput;
    public Action closeAction_Output = phycasOutput;
    public Action saveAction_Output = phycasOutput;
    public Action clearAction_Output = phycasOutput;
	
    // all command components and actions listed here
    // swing components declared here because rendered with swixml
</xsl:text>
            <xsl:for-each select="//phyc:command_list/command_set">
                 <xsl:choose>
                     <xsl:when test="(./@user_interface='all') or (./@user_interface='gui') or (./@user_interface='batch|gui') or (./@user_interface='console|gui')">
                        <xsl:for-each select="./command">
                            <xsl:call-template name="process_command"/>
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:otherwise>
                         <xsl:for-each select="./command">
                            <xsl:if test="(./@user_interface='all') or (./@user_interface='gui') or (./@user_interface='batch|gui') or (./@user_interface='console|gui')">
                                 <xsl:call-template name="process_command"/>
                            </xsl:if>    
                         </xsl:for-each> 
                     </xsl:otherwise>
                 </xsl:choose>
            </xsl:for-each>
 <xsl:text>
 
    /**
     * Creates a new instance of PhycasMain
     * @param s instance of socket connection to main program
     * @throws Exception any exception
     */
    public PhycasMain(PhycasSocket s) throws Exception {
        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        socket = s;
        fc = new JFileChooser();
    }

    /**
     * Render swixml and create gui
     */    
    public void run() {
		try {
			System.out.println("Gui main running");
			Container cFrame = swix.render("xml/PhycasMain.xml");
			frame.setDefaultLookAndFeelDecorated(true);
			frame.pack();
			
			Container cOutput = swix.render("xml/PhycasOutput.xml");
			output.setDefaultLookAndFeelDecorated(true);
			Point frameLoc = frame.getLocation();
			Dimension frameSize = frame.getSize();
			if(frameSize.width &gt;= 600) 
				output.setLocationRelativeTo(frame);
			else
				output.setLocation(new Point(frameLoc.x+frameSize.width,0));
			
			// put reference to command param array of XML Beans into command handler class
			ClassLoader cl = this.getClass().getClassLoader();
            CommandListDocument commandListDoc = CommandListDocument.Factory.parse(cl.getResourceAsStream("xml/all_commands.xml"));
            CommandListDocument.CommandList commandList = commandListDoc.getCommandList();
            CommandSet[] allCommandSets = commandList.getCommandSetArray();
            for(int i=0;i&lt;allCommandSets.length;i++) {
                Command[] allCommands = allCommandSets[i].getCommandArray();
                for(int j=0;j&lt;allCommands.length;j++) {
                    String commandLabel = allCommands[j].getLabel();
                    //System.out.println("Command "+commandLabel);
                    CmdParamGroup[] allParamGroups = allCommands[j].getCmdParamGroupArray();
                    CmdParam[] allParams = {};
                    for(int k=0;k&lt;allParamGroups.length;k++) {
                        CmdParam[] p = allParamGroups[k].getCmdParamArray();
                        allParams = mergeArrays(allParams,p);
                    }
</xsl:text>
			<xsl:for-each select="//phyc:command_list/command_set">
				 <xsl:choose>
					 <xsl:when test="(./@user_interface='all') or (./@user_interface='gui') or (./@user_interface='batch|gui') or (./@user_interface='console|gui')">
						<xsl:for-each select="./command">
							<xsl:call-template name="add_setCmdParams"/>   
						</xsl:for-each>
					 </xsl:when>
					 <xsl:otherwise>
						 <xsl:for-each select="./command">
							<xsl:if test="(./@user_interface='all') or (./@user_interface='gui') or (./@user_interface='batch|gui') or (./@user_interface='console|gui')">
								  <xsl:call-template name="add_setCmdParams"/>
							</xsl:if>
						 </xsl:for-each>
					 </xsl:otherwise>
				 </xsl:choose>
			</xsl:for-each>
 <xsl:text>
                }
            }
			
            // disable any unavailable fields, set up listeners for focus and keystroke events
            tfCommand.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),"okAction_Welcome");
            tfCommand.getActionMap().put("okAction_Welcome",this.okAction_Welcome);
</xsl:text>
			<xsl:for-each select="//phyc:command_list/command_set">
				 <xsl:choose>
					 <xsl:when test="(./@user_interface='all') or (./@user_interface='gui') or (./@user_interface='batch|gui') or (./@user_interface='console|gui')">
						<xsl:for-each select="./command">
							<xsl:call-template name="add_command_listeners"/>   
						</xsl:for-each>
					 </xsl:when>
					 <xsl:otherwise>
						 <xsl:for-each select="./command">
							<xsl:if test="(./@user_interface='all') or (./@user_interface='gui') or (./@user_interface='batch|gui') or (./@user_interface='console|gui')">
								  <xsl:call-template name="add_command_listeners"/>
							</xsl:if>
						 </xsl:for-each>
					 </xsl:otherwise>
				 </xsl:choose>
			</xsl:for-each>
 <xsl:text>
 
             // JavaHelp system
            String helpHS = "Master.hs";
            ClassLoader classLoader = PhycasMain.class.getClassLoader();
            try {
                URL hsURL = HelpSet.findHelpSet(classLoader, helpHS);
                HelpSet hs = new HelpSet(null, hsURL);
                // Create a HelpBroker object:
                HelpBroker hb = hs.createHelpBroker();
                mi_help.addActionListener(new CSH.DisplayHelpFromSource( hb ));
				hb.enableHelpKey(frame.getRootPane(),"intro",null);  // when user hits F1, help is displayed
                // set up context sensitive help so when user selects "Get help on a specific item" from Help menu
                // they can then click on a field in the GUI to get additional help
                mi_help_context.addActionListener(new CSH.DisplayHelpAfterTracking(hb));
</xsl:text>
			<xsl:for-each select="//phyc:command_list/command_set">
				 <xsl:choose>
					 <xsl:when test="(./@user_interface='all') or (./@user_interface='gui') or (./@user_interface='batch|gui') or (./@user_interface='console|gui')">
						<xsl:for-each select="./command">
							<xsl:call-template name="add_help"/>   
						</xsl:for-each>
					 </xsl:when>
					 <xsl:otherwise>
						 <xsl:for-each select="./command">
							<xsl:if test="(./@user_interface='all') or (./@user_interface='gui') or (./@user_interface='batch|gui') or (./@user_interface='console|gui')">
								  <xsl:call-template name="add_help"/>
							</xsl:if>
						 </xsl:for-each>
					 </xsl:otherwise>
				 </xsl:choose>
			</xsl:for-each>
 <xsl:text>
            } 
            catch (Exception ee) {
                // Say what the exception really is
                System.out.println( "JavaHelp Error: " + ee.getMessage());
                System.out.println("HelpSet "+ helpHS +" not found");
				mi_help.setEnabled(false);
            }
            
            // For MCMC graphing
			phycasChart = new PhycasChart(this);
 			// ===================================================================
			//	String avail = getAvailableCommands();
			//	enableAvailableCommands(avail);
			socket.writeToSocket("available;"); //@~Use when command_state ready (uncomment previous two lines if not ready)
			// ===================================================================
			tpOutput.setSelectedIndex(0);
            taOutput.addMouseListener(phycasOutput);
			tpOutput.setMnemonicAt(0, KeyEvent.VK_O);
			cOutput.setVisible(true);
			cFrame.setVisible(true);
		}
		catch (Exception e){
			e.printStackTrace();
            JOptionPane.showMessageDialog(pnl,"An error has occurred in the program, so Phycas must exit.", "ERROR",
            JOptionPane.ERROR_MESSAGE);
            socket.closeSocket();            
			System.exit(0); // need elegant way to handle error!
		}
    }

    /**
     * Get commands that are currently available.
     * Need to deprecate once command_state works.
     * @throws Exception any exception
     * @return available commands
     */    
    public String getAvailableCommands() throws Exception {
        socket.writeToSocket("available;");
        System.out.println("Gui Main: trying to get hidden query result");
        return socket.getHiddenQuery(); 
    }
    
</xsl:text>
			<xsl:for-each select="//phyc:command_list/command_set">
				 <xsl:choose>
					 <xsl:when test="(./@user_interface='all') or (./@user_interface='gui') or (./@user_interface='batch|gui') or (./@user_interface='console|gui')">
						<xsl:for-each select="./command">
							<xsl:call-template name="add_getHandlers"/>   
						</xsl:for-each>
					 </xsl:when>
					 <xsl:otherwise>
						 <xsl:for-each select="./command">
							<xsl:if test="(./@user_interface='all') or (./@user_interface='gui') or (./@user_interface='batch|gui') or (./@user_interface='console|gui')">
								  <xsl:call-template name="add_getHandlers"/>
							</xsl:if>
						 </xsl:for-each>
					 </xsl:otherwise>
				 </xsl:choose>
			</xsl:for-each>
 <xsl:text>

	// merge two arrays into one
    private CmdParam[] mergeArrays(CmdParam[] pa, CmdParam[] pb) {
        CmdParam[] arr = new CmdParam[pa.length+pb.length];
        for (int x=0; x &lt; pa.length; x++) {
            arr[x] = pa[x];
        }
        for (int x=0; x &lt; pb.length; x++) {
            arr[x+pa.length] = pb[x];
        }
        return arr;
    }

    /**
     * Enable a single command
     * @param avail command name
     */    
    public void enableAvailableCommand(String avail) {
</xsl:text>
            <xsl:for-each select="//phyc:command_list/command_set">
                 <xsl:choose>
                     <xsl:when test="(./@user_interface='all') or (./@user_interface='gui') or (./@user_interface='batch|gui') or (./@user_interface='console|gui')">
                        <xsl:for-each select="./command">
                            <xsl:call-template name="available_cmd"/>   
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:otherwise>
                         <xsl:for-each select="./command">
                            <xsl:if test="(./@user_interface='all') or (./@user_interface='gui') or (./@user_interface='batch|gui') or (./@user_interface='console|gui')">
                                  <xsl:call-template name="available_cmd"/>
                            </xsl:if>
                         </xsl:for-each>
                     </xsl:otherwise>
                 </xsl:choose>
            </xsl:for-each>
 <xsl:text>
	}
	
    /**
     * Disable all commands
     */    
    public void disableAllCommands() {
</xsl:text>
          <xsl:for-each select="//phyc:command_list/command_set">
                 <xsl:choose>
                     <xsl:when test="(./@user_interface='all') or (./@user_interface='gui') or (./@user_interface='batch|gui') or (./@user_interface='console|gui')">
                        <xsl:for-each select="./command">
                            <xsl:call-template name="cmds_disable"/>
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:otherwise>
                         <xsl:for-each select="./command">
                            <xsl:if test="(./@user_interface='all') or (./@user_interface='gui') or (./@user_interface='batch|gui') or (./@user_interface='console|gui')">
                                  <xsl:call-template name="cmds_disable"/>
                            </xsl:if>
                         </xsl:for-each>
                     </xsl:otherwise>
                 </xsl:choose>
            </xsl:for-each>
  <xsl:text>
	}
	
    /**
     * Enable a list of commands
     * @param avail list of commands
     */    
    public void enableAvailableCommands(String avail) {
        StringTokenizer st = new StringTokenizer(avail,"\n");
</xsl:text>
            <xsl:for-each select="//phyc:command_list/command_set">
                 <xsl:choose>
                     <xsl:when test="(./@user_interface='all') or (./@user_interface='gui') or (./@user_interface='batch|gui') or (./@user_interface='console|gui')">
                        <xsl:for-each select="./command">
                            <xsl:call-template name="available_cmds_boolean"/>   
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:otherwise>
                         <xsl:for-each select="./command">
                            <xsl:if test="(./@user_interface='all') or (./@user_interface='gui') or (./@user_interface='batch|gui') or (./@user_interface='console|gui')">
                                  <xsl:call-template name="available_cmds_boolean"/>
                            </xsl:if>
                         </xsl:for-each>
                     </xsl:otherwise>
                 </xsl:choose>
            </xsl:for-each>
 <xsl:text>
        while(st.hasMoreTokens()) {
            String token = st.nextToken();
            //System.out.println("token = "+token);
</xsl:text>
            <xsl:for-each select="//phyc:command_list/command_set">
                 <xsl:choose>
                     <xsl:when test="(./@user_interface='all') or (./@user_interface='gui') or (./@user_interface='batch|gui') or (./@user_interface='console|gui')">
                        <xsl:for-each select="./command">
                            <xsl:call-template name="available_cmds_tokens"/>
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:otherwise>
                         <xsl:for-each select="./command">
                            <xsl:if test="(./@user_interface='all') or (./@user_interface='gui') or (./@user_interface='batch|gui') or (./@user_interface='console|gui')">
                                  <xsl:call-template name="available_cmds_tokens"/>
                            </xsl:if>
                         </xsl:for-each>
                     </xsl:otherwise>
                 </xsl:choose>
            </xsl:for-each>
   <xsl:text>
        }
</xsl:text>
          <xsl:for-each select="//phyc:command_list/command_set">
                 <xsl:choose>
                     <xsl:when test="(./@user_interface='all') or (./@user_interface='gui') or (./@user_interface='batch|gui') or (./@user_interface='console|gui')">
                        <xsl:for-each select="./command">
                            <xsl:call-template name="available_cmds_enable"/>
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:otherwise>
                         <xsl:for-each select="./command">
                            <xsl:if test="(./@user_interface='all') or (./@user_interface='gui') or (./@user_interface='batch|gui') or (./@user_interface='console|gui')">
                                  <xsl:call-template name="available_cmds_enable"/>
                            </xsl:if>
                         </xsl:for-each>
                     </xsl:otherwise>
                 </xsl:choose>
            </xsl:for-each>
  <xsl:text>
    }

    /**
     * Keep track of last page viewed, in order to return in case of error
     * @param command name of last command page viewed
     */    
    public void updateLastPageViewed(String command) {
        lastPageViewed = command;
    }

    /**
     * Show last page viewed
     */    
    public void goToLastPageViewed() {
	</xsl:text>
            <xsl:for-each select="//phyc:command_list/command_set">
                 <xsl:choose>
                     <xsl:when test="(./@user_interface='all') or (./@user_interface='gui') or (./@user_interface='batch|gui') or (./@user_interface='console|gui')">
                        <xsl:for-each select="./command">
                            <xsl:call-template name="process_getLastPage"/>
                        </xsl:for-each>
                     </xsl:when>
                     <xsl:otherwise>
                         <xsl:for-each select="./command">
                            <xsl:if test="(./@user_interface='all') or (./@user_interface='gui') or (./@user_interface='batch|gui') or (./@user_interface='console|gui')">
                                 <xsl:call-template name="process_getLastPage"/>
                            </xsl:if>    
                         </xsl:for-each> 
                     </xsl:otherwise>
                 </xsl:choose>
            </xsl:for-each>
	<xsl:text>
    }
	
    /** shows the card with the id requested in the actioncommand */
    public Action showAction = new AbstractAction() {
        public void actionPerformed(ActionEvent e) {
            CardLayout cl = (CardLayout) pnl.getLayout();
             if (e!=null) {
                cl.show( pnl, e.getActionCommand() );
            }
        }
    };
    
    /** exit the application */
    public Action exitAction = new AbstractAction() {
        public void actionPerformed(ActionEvent e) {
            System.exit( 0 );
        }
    };

    /** command line submission */
    public Action okAction_Welcome = new AbstractAction() {
        public void actionPerformed(ActionEvent e) {
            System.out.println("okAction from command: "+tfCommand.getText());
            if(!tfCommand.getText().trim().equals("")) {
                String command = tfCommand.getText() + ";available;";
                taMsgs.append(ATTEMPT_MSG);
                taMsgs.append("\n"+tfCommand.getText());
                taMsgs.setCaretPosition(taMsgs.getDocument().getLength());
                try {
                    socket.writeToSocket(command);
                    taMsgs.append(SUCCESS_MSG);
                    taMsgs.setCaretPosition(taMsgs.getDocument().getLength());
                    tfCommand.setText("");
                }
                catch (Exception exc) {
                    exc.printStackTrace();
                    taMsgs.append(WRITE_ERR_MSG);
                    taMsgs.setCaretPosition(taMsgs.getDocument().getLength());
                }
            }
        }
    };
}

</xsl:text>
</xsl:template>

<xsl:template name="available_cmds_boolean">
              <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
              <xsl:text>boolean found</xsl:text><xsl:value-of select="@label"/><xsl:text> = false;</xsl:text>        
</xsl:template>

<xsl:template name="available_cmds_tokens">
                  <xsl:call-template name="newline"><xsl:with-param name="n_tabs">3</xsl:with-param></xsl:call-template>
                  <xsl:if test="not(position()=1)"> <!--or parent::command_set[preceding-sibling::*]"-->
                      <xsl:text>else </xsl:text>
                  </xsl:if>
                  <xsl:text>if(token.indexOf("</xsl:text><xsl:value-of select="@label"/><xsl:text>")!=-1)</xsl:text>   
                  <xsl:call-template name="newline"><xsl:with-param name="n_tabs">4</xsl:with-param></xsl:call-template>
                  <xsl:text>found</xsl:text><xsl:value-of select="@label"/><xsl:text> = true;</xsl:text>        
</xsl:template>

<xsl:template name="available_cmd">
                  <xsl:call-template name="newline"><xsl:with-param name="n_tabs">3</xsl:with-param></xsl:call-template>
                  <xsl:if test="not(position()=1)"> <!--or parent::command_set[preceding-sibling::*]"-->
                      <xsl:text>else </xsl:text>
                  </xsl:if>
                  <xsl:text>if(avail.indexOf("</xsl:text><xsl:value-of select="@label"/><xsl:text>")!=-1)</xsl:text>   
                  <xsl:call-template name="newline"><xsl:with-param name="n_tabs">4</xsl:with-param></xsl:call-template>
				  <xsl:text>mi_</xsl:text><xsl:value-of select="@label"/><xsl:text>.setEnabled(true);</xsl:text>    
</xsl:template>

<xsl:template name="available_cmds_enable">
              <xsl:call-template name="newline"><xsl:with-param name="n_tabs">3</xsl:with-param></xsl:call-template>
              <xsl:text>mi_</xsl:text><xsl:value-of select="@label"/><xsl:text>.setEnabled(found</xsl:text><xsl:value-of select="@label"/><xsl:text>);</xsl:text>    
</xsl:template>

<xsl:template name="cmds_disable">
              <xsl:call-template name="newline"><xsl:with-param name="n_tabs">3</xsl:with-param></xsl:call-template>
              <xsl:text>mi_</xsl:text><xsl:value-of select="@label"/><xsl:text>.setEnabled(false);</xsl:text>    
</xsl:template>

<xsl:template name="add_command_listeners">
              <xsl:variable name="command_name_label">command_<xsl:value-of select="@label"/></xsl:variable>
              <xsl:variable name="command_name"><xsl:value-of select="@label"/></xsl:variable>
    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
    <xsl:text>pnl_</xsl:text><xsl:value-of select="$command_name"/><xsl:text>.addComponentListener(</xsl:text><xsl:value-of select="$command_name_label"/><xsl:text>);</xsl:text>
    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
    <xsl:text>command_</xsl:text><xsl:value-of select="$command_name"/><xsl:text>.availableFields();</xsl:text>
	<xsl:if test = "string(./cmd_param_group)"> 
		<xsl:for-each select="cmd_param_group">
			<xsl:sort select="@id" data-type="number"/>
			<xsl:if test = "string(./cmd_param)"> 
				<xsl:for-each select="cmd_param">
					<xsl:sort select="@id" data-type="number"/>
					<xsl:call-template name="process_cmd_param_listeners"><xsl:with-param name="cmd_name"><xsl:value-of select="$command_name"/></xsl:with-param><xsl:with-param name="cmd_name_label"><xsl:value-of select="$command_name_label"/></xsl:with-param></xsl:call-template>
				</xsl:for-each>
			</xsl:if>
		</xsl:for-each>
	</xsl:if>
</xsl:template>

<xsl:template name="add_setCmdParams">
              <xsl:variable name="command_name_label">command_<xsl:value-of select="@label"/></xsl:variable>
              <xsl:variable name="command_name"><xsl:value-of select="@label"/></xsl:variable>
    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
    <xsl:text>if(commandLabel.equals("</xsl:text><xsl:value-of select="$command_name"/><xsl:text>"))</xsl:text>
    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
    <xsl:value-of select="$command_name_label"/><xsl:text>.setAllParams(allParams);</xsl:text>
</xsl:template>

<xsl:template name="add_getHandlers">
              <xsl:variable name="command_name_label">command_<xsl:value-of select="@label"/></xsl:variable>
              <xsl:variable name="command_name"><xsl:value-of select="@label"/></xsl:variable>
    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
	<xsl:text>/**</xsl:text>
    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
	<xsl:text>* Accessor for command handler</xsl:text>
    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
	<xsl:text>* @return handler</xsl:text>
    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
	<xsl:text>*/</xsl:text>
    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
    <xsl:text>public </xsl:text><xsl:value-of select="$command_name"/><xsl:text>Handler get</xsl:text><xsl:value-of select="$command_name"/><xsl:text>Handler() {</xsl:text>
    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
    <xsl:text>return </xsl:text><xsl:value-of select="$command_name_label"/><xsl:text>;</xsl:text>
    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
    <xsl:text>}</xsl:text>
</xsl:template>

<xsl:template name="process_cmd_param_listeners">
               <xsl:param name="cmd_name">default</xsl:param>
               <xsl:param name="cmd_name_label">default</xsl:param>
	<xsl:choose>
		<!-- mixed command options may contain choice commands that create enums -->
		<xsl:when test="./mixed_type_info">
			<xsl:for-each select="./mixed_type_info/cmd_param">
				<xsl:call-template name="process_cmd_param_listeners"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param><xsl:with-param name="cmd_name_label"><xsl:value-of select="$cmd_name_label"/></xsl:with-param></xsl:call-template>
			</xsl:for-each>
		</xsl:when>
		<xsl:when test="./bool_type_info">
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>cb_Bool_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
            <xsl:text>.addItemListener(</xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>);</xsl:text>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>cb_Bool_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
            <xsl:text>.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),"okAction");</xsl:text>
            <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>cb_Bool_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
            <xsl:text>.getActionMap().put("okAction",</xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>.okAction);</xsl:text>
		</xsl:when>
		<xsl:when test="(./outfile_type_info) or (./infile_type_info)">
            <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>tf_File_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
            <xsl:text>.addFocusListener(</xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>);</xsl:text>
            <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>tf_File_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
            <xsl:text>.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),"okAction");</xsl:text>
            <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>tf_File_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
            <xsl:text>.getActionMap().put("okAction",</xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>.okAction);</xsl:text>
        </xsl:when>
		<xsl:when test="./output_type_info">
            <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>tf_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
            <xsl:text>.addFocusListener(</xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>);</xsl:text>
            <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>tf_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
            <xsl:text>.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),"okAction");</xsl:text>
            <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>tf_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
            <xsl:text>.getActionMap().put("okAction",</xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>.okAction);</xsl:text>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>cb_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>_File</xsl:text>
            <xsl:text>.addItemListener(</xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>);</xsl:text>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>cb_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>_File</xsl:text>
            <xsl:text>.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),"okAction");</xsl:text>
            <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>cb_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>_File</xsl:text>
            <xsl:text>.getActionMap().put("okAction",</xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>.okAction);</xsl:text>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>cb_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>_Out</xsl:text>
            <xsl:text>.addItemListener(</xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>);</xsl:text>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>cb_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>_Out</xsl:text>
            <xsl:text>.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),"okAction");</xsl:text>
            <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>cb_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>_Out</xsl:text>
            <xsl:text>.getActionMap().put("okAction",</xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>.okAction);</xsl:text>
		<xsl:if test="./output_type_info/default/@plottable = 'true'">
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>cb_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>_Plot</xsl:text>
            <xsl:text>.addItemListener(</xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>);</xsl:text>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>cb_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>_Plot</xsl:text>
            <xsl:text>.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),"okAction");</xsl:text>
            <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>cb_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>_Plot</xsl:text>
            <xsl:text>.getActionMap().put("okAction",</xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>.okAction);</xsl:text>
		</xsl:if>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
			<xsl:text>rb_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>_Append</xsl:text>
			<xsl:text>.getActionMap().put("okAction",</xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>.okAction);</xsl:text>
            <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
			<xsl:text>rb_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>_Append</xsl:text>
			<xsl:text>.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),"okAction");</xsl:text>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
			<xsl:text>rb_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>_Replace</xsl:text>
			<xsl:text>.getActionMap().put("okAction",</xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>.okAction);</xsl:text>
            <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
			<xsl:text>rb_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>_Replace</xsl:text>
			<xsl:text>.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),"okAction");</xsl:text>
       </xsl:when>
		<xsl:when test="(./integer_type_info) or (./double_type_info)">
            <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>tf_Number_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
            <xsl:text>.addFocusListener(</xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>);</xsl:text>
            <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>tf_Number_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
            <xsl:text>.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),"okAction");</xsl:text>
            <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>tf_Number_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
            <xsl:text>.getActionMap().put("okAction",</xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>.okAction);</xsl:text>
        </xsl:when>
		<xsl:when test="./string_type_info or ./distribution_type_info">
            <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>tf_String_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
            <xsl:text>.addFocusListener(</xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>);</xsl:text>
            <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>tf_String_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
            <xsl:text>.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),"okAction");</xsl:text>
            <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>tf_String_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
            <xsl:text>.getActionMap().put("okAction",</xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>.okAction);</xsl:text>
		</xsl:when>
		<xsl:when test="./restricted_string_type_info|./name_type_info">
            <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>tf_RestrictedString_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
            <xsl:text>.addFocusListener(</xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>);</xsl:text>
            <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>tf_RestrictedString_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
            <xsl:text>.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),"okAction");</xsl:text>
            <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>tf_RestrictedString_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
            <xsl:text>.getActionMap().put("okAction",</xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>.okAction);</xsl:text>
            <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>command_</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>.setInitialDisallowedValues();</xsl:text>
            <!--xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>listModel_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
            <xsl:text> = (ListModel_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
            <xsl:text>)list_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
            <xsl:text>.getModel();</xsl:text-->
		</xsl:when>
		<xsl:when test="./choice_type_info">
			<xsl:choose>
				<xsl:when test="count(./choice_type_info/choices/constant_val)&lt;=4 and not(./choice_type_info/choices/labile)">
					<xsl:for-each select = "./choice_type_info/choices/constant_val">
						<xsl:variable name="def"><xsl:value-of select="../../default"/></xsl:variable>
						<xsl:variable name="cv"><xsl:value-of select="."/></xsl:variable>
						<xsl:if test="normalize-space($def) = $cv">
							<xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
							<xsl:call-template name="add_radio_button">
								<xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param>
								<xsl:with-param name="number"><xsl:value-of select="position() - 1"/></xsl:with-param>
							</xsl:call-template>					
							<xsl:text>.setSelected(true);</xsl:text>
						</xsl:if>
					</xsl:for-each>
					<xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
							<xsl:call-template name="add_radio_button2">
								<xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param>
								<xsl:with-param name="number"><xsl:value-of select="position() - 1"/></xsl:with-param>
							</xsl:call-template>					
					<xsl:text>.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),"okAction");</xsl:text>
					<xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
							<xsl:call-template name="add_radio_button2">
								<xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param>
								<xsl:with-param name="number"><xsl:value-of select="position() - 1"/></xsl:with-param>
							</xsl:call-template>					
					<xsl:text>.getActionMap().put("okAction",</xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>.okAction);</xsl:text>
				</xsl:when>
				<xsl:otherwise>
					<xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
					<xsl:text>cmb_Choice_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
					<xsl:text>.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),"okAction");</xsl:text>
					<xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
					<xsl:text>cmb_Choice_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
					<xsl:text>.getActionMap().put("okAction",</xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>.okAction);</xsl:text>
				</xsl:otherwise>
			</xsl:choose>
		</xsl:when>        
		<xsl:when test="(./char_set_type_info) or (./tree_set_type_info) or (./tax_set_type_info)">
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
			<xsl:text>list_Set_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),"okAction");</xsl:text>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
			<xsl:text>list_Set_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>.getActionMap().put("okAction",</xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>.okAction);</xsl:text>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
			<xsl:text>tf_Set_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),"okAction");</xsl:text>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
			<xsl:text>tf_Set_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>.getActionMap().put("okAction",</xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>.okAction);</xsl:text>
		</xsl:when>        
	</xsl:choose>
</xsl:template>

<xsl:template name="add_help">
              <xsl:variable name="command_name_label">command_<xsl:value-of select="@label"/></xsl:variable>
              <xsl:variable name="command_name"><xsl:value-of select="@label"/></xsl:variable>
	<xsl:if test = "string(./cmd_param_group)"> 
		<xsl:for-each select="cmd_param_group">
			<xsl:sort select="@id" data-type="number"/>
			<xsl:if test = "string(./cmd_param)"> 
				<xsl:for-each select="cmd_param">
					<xsl:sort select="@id" data-type="number"/>
					<xsl:call-template name="process_cmd_param_help"><xsl:with-param name="cmd_name"><xsl:value-of select="$command_name"/></xsl:with-param><xsl:with-param name="param_name"><xsl:value-of select="./@label"/><xsl:value-of select="./@placement"/></xsl:with-param></xsl:call-template>
				</xsl:for-each>
			</xsl:if>
		</xsl:for-each>
	</xsl:if>
</xsl:template>

<xsl:template name="process_cmd_param_help">
               <xsl:param name="mixed">false</xsl:param>
               <xsl:param name="cmd_name">default</xsl:param>
               <xsl:param name="cmd_name_label">default</xsl:param>
               <xsl:param name="param_name">default</xsl:param>
	<xsl:choose>
		<!-- mixed command options may contain choice commands that create enums -->
		<xsl:when test="./mixed_type_info">
			<xsl:for-each select="./mixed_type_info/cmd_param">
				<xsl:call-template name="process_cmd_param_help"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param><xsl:with-param name="param_name"><xsl:value-of select="$param_name"/></xsl:with-param><xsl:with-param name="mixed">true</xsl:with-param></xsl:call-template>
			</xsl:for-each>
		</xsl:when>
		<xsl:when test="./bool_type_info">
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(lbl_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(cb_Bool_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		</xsl:when>
		<xsl:when test="(./outfile_type_info) or (./infile_type_info)">
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(tf_File_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(lbl_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(choose_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
        </xsl:when>
		<xsl:when test="./output_type_info">
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(lbl_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(cb_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>_File, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(lbl_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>_File, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(choose_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(cb_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>_Out, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(lbl_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>_Out, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		<xsl:if test="./output_type_info/default/@plottable = 'true'">
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(cb_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>_Plot, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(lbl_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>_Plot, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		</xsl:if>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(rb_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>_Append, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(rb_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>_Replace, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
       </xsl:when>
		<xsl:when test="(./integer_type_info) or (./double_type_info)">
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(tf_Number_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(lbl_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
        </xsl:when>
		<xsl:when test="./string_type_info">
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(tf_String_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(lbl_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		</xsl:when>
		<xsl:when test="./distribution_type_info">
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(tf_String_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(lbl_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(choose_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		</xsl:when>
		<xsl:when test="./restricted_string_type_info|./name_type_info">
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(lbl_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(tf_RestrictedString_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		</xsl:when>
		<xsl:when test="./choice_type_info">
                <xsl:if test="$mixed='false'">
					<xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
					<xsl:text>CSH.setHelpIDString(lbl_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
				</xsl:if>
			<xsl:choose>
				<xsl:when test="count(./choice_type_info/choices/constant_val)&lt;=4 and not(./choice_type_info/choices/labile)">
						<xsl:for-each select = "choice_type_info/choices/constant_val">
							<xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
							<xsl:text>CSH.setHelpIDString(</xsl:text>
							<xsl:call-template name="add_radio_button">
								<xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param>
								<xsl:with-param name="number"><xsl:value-of select="position() - 1"/></xsl:with-param>
							</xsl:call-template>		
							<xsl:text>, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>		
						</xsl:for-each>	
				</xsl:when>
				<xsl:otherwise>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(cmb_Choice_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
				</xsl:otherwise>
			</xsl:choose>
		</xsl:when>        
		<xsl:when test="(./char_set_type_info) or (./tree_set_type_info) or (./tax_set_type_info)">
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(tf_Set_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(lbl_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(list_Set_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
            <xsl:text>CSH.setHelpIDString(cmb_Set_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template><xsl:text>, "command</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>Param</xsl:text><xsl:value-of select="$param_name"/><xsl:text>");</xsl:text>
		</xsl:when>        
	</xsl:choose>
</xsl:template>

<xsl:template name="process_getLastPage">
    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">2</xsl:with-param></xsl:call-template>
     <xsl:text>if (lastPageViewed.equals("</xsl:text><xsl:value-of select="@label"/><xsl:text>")) </xsl:text>
    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">3</xsl:with-param></xsl:call-template>
    <xsl:text>mi_</xsl:text><xsl:value-of select="@label"/><xsl:text>.doClick();</xsl:text>
</xsl:template>

<xsl:template name="process_command">
    <xsl:variable name="command_name_label">command_<xsl:value-of select="@label"/></xsl:variable>
    <xsl:variable name="command_name"><xsl:value-of select="@label"/></xsl:variable>
    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
    <xsl:text>//for command </xsl:text><xsl:value-of select="@label"/><xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
    <xsl:text>public JPanel pnl_</xsl:text><xsl:value-of select="@label"/><xsl:text>;</xsl:text>
    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
    <xsl:text>public JMenuItem mi_</xsl:text><xsl:value-of select="@label"/><xsl:text>;</xsl:text>
    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
    <xsl:text>public </xsl:text><xsl:value-of select="@label"/><xsl:text>Handler command_</xsl:text><xsl:value-of select="@label"/><xsl:text> = new </xsl:text><xsl:value-of select="@label"/><xsl:text>Handler(this);</xsl:text>
    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
    <xsl:text>public Action okAction_</xsl:text><xsl:value-of select="@label"/><xsl:text> = </xsl:text><xsl:value-of select="$command_name_label"/><xsl:text>;</xsl:text>
	<xsl:if test = "string(./cmd_param_group)"> 
		<xsl:for-each select="cmd_param_group">
			<xsl:sort select="@id" data-type="number"/>
			<xsl:if test = "string(./cmd_param)"> 
				<xsl:for-each select="cmd_param">
					<xsl:sort select="@id" data-type="number"/>
					<xsl:call-template name="process_cmd_param"><xsl:with-param name="cmd_name_label"><xsl:value-of select="$command_name_label"/></xsl:with-param><xsl:with-param name="cmd_name"><xsl:value-of select="$command_name"/></xsl:with-param></xsl:call-template>
				</xsl:for-each>
			</xsl:if>
		</xsl:for-each>
	</xsl:if>
</xsl:template>

<xsl:template name="process_cmd_param">
	<xsl:param name="mixed">false</xsl:param>
    <xsl:param name="cmd_name">default</xsl:param>
    <xsl:param name="cmd_name_label">default</xsl:param>
	<xsl:choose>
        <xsl:when test="./choice_type_info">
            <xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<!--xsl:if test = "boolean(string(./choice_type_info/choices/constant_val))"-->
                <xsl:if test="$mixed='false'">
					<xsl:text>public JLabel </xsl:text>
					<xsl:text>lbl_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
					<xsl:text>;</xsl:text>
					<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
            	</xsl:if>
				<xsl:choose>
					<xsl:when test="count(choice_type_info/choices/constant_val)>4 or boolean(string(choice_type_info/choices/labile))">
						<xsl:text>public Action action_cmb_</xsl:text>
						<xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
						<xsl:text> = </xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>;</xsl:text>
						<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
						<xsl:text>public JComboBox cmb_Choice_</xsl:text>
						<xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
						<xsl:text>;</xsl:text>
						<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
					</xsl:when>
					<xsl:otherwise>
						<xsl:for-each select = "choice_type_info/choices/constant_val">
							<xsl:text>public Action action_</xsl:text>
						<xsl:call-template name="add_radio_button">
							<xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param>
							<xsl:with-param name="number"><xsl:value-of select="position() - 1"/></xsl:with-param>
						</xsl:call-template>					
							<xsl:text> = </xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>;</xsl:text>
							<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
						</xsl:for-each>
						<xsl:text>public JRadioButton </xsl:text>
						<xsl:for-each select = "choice_type_info/choices/constant_val">
						<xsl:call-template name="add_radio_button">
							<xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param>
							<xsl:with-param name="number"><xsl:value-of select="position() - 1"/></xsl:with-param>
						</xsl:call-template>					
							<xsl:if test="not(position()=last())">
								<xsl:text>,</xsl:text>
							</xsl:if>
						</xsl:for-each>
						<xsl:text>;</xsl:text>
					</xsl:otherwise>			               
				</xsl:choose>
			<!--/xsl:if-->
		</xsl:when>
		<!-- mixed command options may contain choice commands that create enums -->
		<xsl:when test="./mixed_type_info">
			<xsl:for-each select="./mixed_type_info/cmd_param">
    			    <xsl:call-template name="process_cmd_param"><xsl:with-param name="cmd_name_label"><xsl:value-of select="$cmd_name_label"/></xsl:with-param><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param><xsl:with-param name="mixed">true</xsl:with-param></xsl:call-template>
			</xsl:for-each>
		</xsl:when>
		<xsl:when test="./bool_type_info">
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JCheckBox cb_Bool_</xsl:text>
			<xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>;</xsl:text><xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JLabel </xsl:text>
			<xsl:text>lbl_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>;</xsl:text>
		</xsl:when>
		<xsl:when test="./restricted_string_type_info|./name_type_info">
		    <xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JTextField </xsl:text>
			<xsl:text>tf_RestrictedString_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>;</xsl:text><xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JLabel </xsl:text>
			<xsl:text>lbl_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>;</xsl:text>
			<!--xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public Action action_list_</xsl:text>
			<xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>                                            <xsl:text> = </xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>;</xsl:text>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JList list_</xsl:text>
			<xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>                                           <xsl:text>;</xsl:text>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public ListModel_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text> listModel_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>;</xsl:text-->
		</xsl:when>
		<xsl:when test="(./outfile_type_info) or (./infile_type_info)">
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			    <xsl:text>public Action chooseAction_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param>
			</xsl:call-template>		               
			<xsl:text> = </xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>;</xsl:text>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JTextField </xsl:text>
			<xsl:text>tf_File_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>;</xsl:text>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JLabel </xsl:text>
			<xsl:text>lbl_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>;</xsl:text>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JButton choose_</xsl:text>
			<xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>;</xsl:text>
		</xsl:when>
		<xsl:when test="(./output_type_info)">
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			    <xsl:text>public Action chooseAction_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param>
			</xsl:call-template>		               
			<xsl:text> = </xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>;</xsl:text>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JTextField tf_Out_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>;</xsl:text>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JLabel </xsl:text>
			<xsl:text>lbl_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>;</xsl:text>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JCheckBox cb_Out_</xsl:text>
			<xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>_File;</xsl:text><xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JLabel lbl_Out_</xsl:text>
			<xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>_File;</xsl:text>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JButton choose_</xsl:text>
			<xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>;</xsl:text>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JCheckBox cb_Out_</xsl:text>
			<xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>_Out;</xsl:text><xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JLabel lbl_Out_</xsl:text>
			<xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>_Out;</xsl:text>
		<xsl:if test="./output_type_info/default/@plottable = 'true'">
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JCheckBox cb_Out_</xsl:text>
			<xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>_Plot;</xsl:text><xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JLabel lbl_Out_</xsl:text>
			<xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>_Plot;</xsl:text>
		</xsl:if>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JRadioButton rb_Out_</xsl:text>
			<xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>_Append;</xsl:text><xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JRadioButton rb_Out_</xsl:text>
			<xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>_Replace;</xsl:text><xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
		</xsl:when>
		<xsl:when test="(./char_set_type_info) or (./tree_set_type_info) or (./tax_set_type_info)">
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JTextField </xsl:text>
			<xsl:text>tf_Set_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>;</xsl:text><xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JLabel </xsl:text>
			<xsl:text>lbl_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>;</xsl:text>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public Action action_list_</xsl:text>
			<xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text> = </xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>;</xsl:text>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JList list_Set_</xsl:text>
			<xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>                                           
			<xsl:text>;</xsl:text>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<!--xsl:text>public ListModel_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text> listModel_</xsl:text>
			<xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>;</xsl:text>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template-->
			<xsl:text>public Action action_cmb_</xsl:text>
			<xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text> = </xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>;</xsl:text>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JComboBox cmb_Set_</xsl:text>
			<xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>;</xsl:text>
		</xsl:when>		
		<xsl:when test="./string_type_info">
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JTextField </xsl:text>
			<xsl:text>tf_String_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>;</xsl:text><xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JLabel </xsl:text>
			<xsl:text>lbl_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>;</xsl:text>
		</xsl:when>		
		<xsl:when test="./distribution_type_info">
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			    <xsl:text>public Action chooseAction_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param>
			</xsl:call-template>		               
			<xsl:text> = </xsl:text><xsl:value-of select="$cmd_name_label"/><xsl:text>;</xsl:text>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JTextField </xsl:text>
			<xsl:text>tf_String_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>;</xsl:text><xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JLabel </xsl:text>
			<xsl:text>lbl_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>;</xsl:text>
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JButton choose_</xsl:text>
			<xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>;</xsl:text>
		</xsl:when>		
		<xsl:when test="(./integer_type_info) or (./double_type_info)">
			<xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JTextField </xsl:text>
			<xsl:text>tf_Number_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>;</xsl:text><xsl:call-template name="newline"><xsl:with-param name="n_tabs">1</xsl:with-param></xsl:call-template>
			<xsl:text>public JLabel </xsl:text>
			<xsl:text>lbl_</xsl:text><xsl:call-template name="add_cmd_name"><xsl:with-param name="cmd_name"><xsl:value-of select="$cmd_name"/></xsl:with-param></xsl:call-template>
			<xsl:text>;</xsl:text>
		</xsl:when>		
	</xsl:choose>
</xsl:template>

<xsl:template name="add_radio_button">
     <xsl:param name="cmd_name"></xsl:param>
     <xsl:param name="number"></xsl:param>
	<xsl:text>rb_Choice_cmd</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>_</xsl:text><xsl:value-of select="../../../phycas_impl/manipulated_var"/>
	<xsl:text>_</xsl:text>
	<xsl:value-of select ="$number"/>
</xsl:template>

<xsl:template name="add_radio_button2">
     <xsl:param name="cmd_name"></xsl:param>
     <xsl:param name="number"></xsl:param>
	<xsl:text>rb_Choice_cmd</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>_</xsl:text><xsl:value-of select="./phycas_impl/manipulated_var"/>
	<xsl:text>_</xsl:text>
	<xsl:value-of select ="$number"/>
</xsl:template>

<xsl:template name="add_cmd_name">
     <xsl:param name="cmd_name"></xsl:param>
	<xsl:text>cmd</xsl:text><xsl:value-of select="$cmd_name"/><xsl:text>_</xsl:text><xsl:value-of select="phycas_impl/manipulated_var"/>
</xsl:template>

<!-- METHOD: writes a newline, takes $n_tabs as a param and writes that number of tabs after the newline -->
<xsl:template name="newline">
	<xsl:param name="n_tabs">0</xsl:param>
	<!-- add a newline -->
	<xsl:text>
</xsl:text>
	<!-- there must be a better way -->
	<xsl:if test="$n_tabs='1'">
		<xsl:text>    </xsl:text>
	</xsl:if>
	<xsl:if test="$n_tabs='2'">
		<xsl:text>        </xsl:text>
	</xsl:if>
	<xsl:if test="$n_tabs='3'">
		<xsl:text>            </xsl:text>
	</xsl:if>
	<xsl:if test="$n_tabs='4'">
		<xsl:text>                </xsl:text>
	</xsl:if>
</xsl:template>


</xsl:stylesheet>
