This is the changes.txt file associated with the Python program Phycas
Phycas can be obtained from http://phycas.org/
Last modified: 12 Aug 2007

~~~~~~~~~~~~~~~~~ Release history (most recent first) ~~~~~~~~~~~~~~~~~~~~~~~~~~

Release 0.11.SVN (DATE)
-----------------------------------------------
o Bug number 2 fixed (see BUGS file for details)
o expected feature: Both Windows and Mac installers available on phycas.org
o expected feature: Quick-start manual now included 

Release 0.11.366 (4-Jun-2007, SVN revision 366)
-----------------------------------------------
o Windows installer placed on phycas.org (still no mac installer)
o From this point on, third number in the version will be the Subversion (SVN) revision number,
  which makes it easy to determine (using Subversion) exactly which source code files were used
  in creating that particular build

Release 0.11.0 (11-Aug-2006, SVN revision 174)
----------------------------------------------
o reorganized sources so that all source code files currently in use are under a single "src"
  directory, and everything is organized as a package so that only one PYTHONPATH point is needed
o release 0.11.1 (3-Nov-2006, SVN revision 294)
	- added ProbDist.ImproperUniformPrior
	- removed dependence on numarray (USING_NUMARRAY macro can be used to restore dependence)
	- added a SimData::calctBinned function to allow compaction of patterns into 7 bins
	  for Gelfand-Ghosh evaluation of DNA models. The seven bins are
	    0: constant patterns in which all states are A
	    1: constant patterns in which all states are C
	    2: constant patterns in which all states are G
	    3: constant patterns in which all states are T
	    4: variable patterns in which any 2 distinct states are present
	    5: variable patterns in which any 3 distinct states are present
	    6: variable patterns in which all 4 distinct states are present
	- note: revision 295 is identical except for removal of POLPY_NEWWAY wrappers

Release 0.9.0 (13-Apr-2006, SVN revision 95)
--------------------------------------------
o Installed new system (devised at the NESCent meeting 17-22 May, 2006) for keeping track 
  of conditional likelihood arrays (CLAs) in which CLAs are stored until needed and then 
  left in place until invalidated (the new system resulted in approximately 64% speedup)
o rel_0_9_1 (SVN revision 98) achieved another 26% speedup for DNA data by unrolling loops 
  over num_states in both TreeLikelihood::calcCLAOneTip and TreeLikelihood::calcCLANoTips
o rel_0_9_2 (20-June-2006, SVN revision 102) added underflow protection (see 
  underflow_policy.hpp) 
o SVN revision 127 represents the first successful implementation of CipresPhycas

Release 0.8.0 (24-Apr-2006, SVN revision 21)
--------------------------------------------
o implement the FLEX model (rates and probabilities independent, rates are not assumed
  to be gamma-distributed) 
o rel_0_8_1 (14-May-2006, SVN revision 33)
	- added NCatMove class to handle the reversible-jump component (changes in the number 
	  of rate categories)
	- added ability (in Debug mode only) to determine which line of source code is 
	  responsible for every random number generated by Lot::Uniform() (search for 
	  FILE_AND_LINE macro, which is defined in pyphydev/phycas/phycas_config.h)
	- removed the silly "spin" (drawing 100 random numbers after setting the seed from the
	  system clock) in the function Lot::UseClockToSeed() in the file 
	  pyphydev/pyphy/prob_dist/basic_log.inl. This required refreshing all reference output
	  from all examples in the folders in pyphydev/pyphy/apps

Release 0.7.0 (4-Mar-2006, CVS release tag rel_0_7_0)
-----------------------------------------------------
o add GTR model
o add GTR to LikelihoodTest.py example
o Note: one correction should be made if this version is checked out, otherwise some of the
  tests in pyphydev/pyphy/apps/runall.bat will fail:
  In Phycas.py, in the setupModel() function, replace these lines
        if self.num_rates > 1:
            self.model.setNGammaRates(self.num_rates)
            self.model.setShape(0.5)
            self.model.setDiscreteGammaShapePrior(self.gamma_shape_prior)
        else:
            self.model.setNotGammaModel()
  with these lines:
        self.model.setNGammaRates(self.num_rates)
        if self.num_rates > 1:
            self.model.setShape(0.5)
            self.model.setDiscreteGammaShapePrior(self.gamma_shape_prior)
o rel_0_7_1 (21-Apr-2006, SVN revision 16)
  Note: this release was not tagged. Now that the project is under SVN control, the SVN revision
  number can serve as the release tag.
  This release adds some heterogeneous functionality, but is mostly the fruits of the 
  desperate hacking that went on just before my (POL) talks in Duke Biology and Duke
  Stats April 6 and 14 (respectively), 2006. Some of this (e.g. pattern-specific rates
  model will be removed/replaced, so this will be the only tagged release in which it
  makes an appearance.
	- this will be first tagged release to the new subversion repository
	- added MCMCUpdater::invert_shape data member to govern whether the prior on the gamma
	  shape parameter applies to alpha directly (invert_shape = false), or to 1/alpha 
	  (invert_shape = true) 
	- implements the (probably ill-conceived) pattern-specific rates model, which will
	  not appear in the next release but will be replaced with a much more elegant model.
	  To find the parts relevant to pattern-specific rates, search for the keyword PSR_MODEL
	  in // comments (c++ files) or # comments (Python files)
	- SliceSampler::SetMaxUnits(0) now sets data member maxUnits to UINT_MAX
	- Tree::SetAllEdgeLens function was added
	- setAllEdgeLens function was added to the phylogeny_pymod.cpp BOOST_PYTHON_MODULE
	- added SimData::createMapleTuples, SimData::zeroCounts, SimData::appendCountsToFileand
	  SimData::getPatterns to help in visualizing patterns in small (4-taxon) posterior
	  predictive simulated data sets (not sure how long these functions will be around, 
	  especially createMapleTuples)
o rel_0_7_2 (22-Apr-2006, SVN revision 19) 
	- removed remaining POLPY_NEWWAY wrappers, which were flagging changes that allowed
	  (1) the maximum number of slice sampling units in a slice to be set by the user, and
	  (2) a prior to be set on the inverse of the gamma shape parameter

Release 0.6.0 (24-Feb-2006, CVS release tag rel_0_6_0)
------------------------------------------------------
o add proportion of invariable sites to all models
o rel_0_6_1 (26-Feb-2006)
	- add an MCMC parameter for pinvar and add  HKY+I and HKY+G+I to the list of models tested in GelfandGhosh.py
	- add ability to fix model parameters (e.g. fixKappa() and freeKappa())
	- add pyphy/apps/FixedParams/FixedParams.py example application to test parameter fixing ability
o rel_0_6_2 (27-Feb-2006)
	- move responsibility for creating edge length parameters and the edge length hyperparameter into Model
	- add ability to fix edge lengths and/or edge length hyperparameter

Release 0.5.0 (20-Feb-2006, CVS release tag rel_0_5_0)
------------------------------------------------------
o add gamma rate heterogeneity
o added pyphy/apps/LikelihoodTest/LikelihoodTest.py (computes log-likelihood
	under all models) 
o rel_0_5_1	
	- added pyphy/apps/ExplorePrior/ExplorePrior.py (runs without data to check priors)
	- LikelihoodTest.py now performs its tests on both simulated and real data  
	- GelfandGhosh.py now compares three models: JC, HKY and HKYgamma for data simulated under JC

Release 0.4.0 (12-Feb-2006, CVS release tag rel_0_4_0)
------------------------------------------------------
o add reversible-jump to accommodate polytomous trees
o see pyphy/apps/Polytomies/Polytomies.py for an example
o rel_0_4_1 (15-Feb-2006): 
	- removed spin from lot initialization
	- separated CDF from Lot
	- simplified Lot and CDF classes, leaving only functions in actual use

Release 0.3.0 (2-Feb-2006, CVS release tag rel_0_3_0)
-----------------------------------------------------
o ability to compute Gelfand-Ghosh measure
o see pyphy/apps/GelfandGhosh/GelfandGhosh.py for an example

Release 0.2.0 (26-Jan-2006, CVS release tag rel_0_2_0)
------------------------------------------------------
o add ability to simulate data
o rel_0_2_1 (27-Jan-2006):
	- create a Python wrapper file for the SimData class and add doctest examples
	- change Tree & to TreeShPtr in TreeLikelihood member functions
o rel_0_2_2 (31-Jan-2006):
	- removed data matrix argument from TreeLikelihood constructor, allowing
		a TreeLikelihood object to be created without reference to any source
		of data. The functions copyDataFromDiscreteMatrix and copyDataFromSimData
		are now used to associate data with the TreeLikelihood object. It is now
		possible to simulate data, then transfer that data from a SimData object
		to a TreeLikelihood object and compute the likelihood for (or perform a 
		Bayesian MCMC analysis on) the simulated data.

Release 0.1.0 (20-Jan-2006, CVS release tag rel_0_1_0)
------------------------------------------------------
o add Larget-Simon move to update topology
o rel_0_1_1 (24-Jan-2006): 
	- fixed bug (prior not being taken account of in LargetSimonMove)
	- joint prior not calculated anymore, only prior for parameters that are relevant
o rel_0_1_2 (24-Jan-2006):
	- fixed expected output in the doctest example in MCMCSimple, which changed 
		because not using full joint prior any more (the mode reported for slice 
		samplers was different due to the new height of the log-posterior, but 
		the samples drawn were identical to the reference sample before)

Release 0.0.0 (December 2005, no CVS release tag)
-------------------------------------------------
o slice sampling for model parameters (including edge lengths)
o single chain
o unpartitioned
o HKY model

~~~~~~~~~~~~~~~~~~~~~~ Release history (end) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The general rule is that the first version that works with one or more new 
features gets the x.x.<svn revision number> release. The term "works" means that:
  1) phycas/Tests/runall.py must return no errors;
  2) phycas/Tests/doctestall.py must return no errors;
After that, speed improvements and bug fixes yield new minor releases, which are
indicated only by the fact that the svn revision number increases.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
