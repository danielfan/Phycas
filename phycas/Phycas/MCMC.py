from phycas.Phycas.PhycasCommand import *
from phycas.Phycas.MCMCImpl import MCMCImpl
from phycas.ProbDist import BetaDist, ExponentialDist, InverseGammaDist
class MCMC(PhycasCommand):
    def __init__(self, p):
        args = (("random_seed",            0,                               "Determines the random number seed used; specify 0 to generate seed automatically from system clock"),
                ("ncycles",                10000,                           "The number of update cycles (a cycle is analogous to, but different than, a 'generation' in MrBayes; Phycas does in one cycle what MrBayes does in about 100 generations for a simple model such as JC)"),
                ("sample_every",           100,                             "The current tree topology and model parameter values will be sampled after this many cycles have elapsed since the last sample was taken"),
                ("report_every",           100,                             "A progress report will be displayed after this many cycles have elapsed since the last progress report"),
                ("verbose",                True,                            "You will get more output if True, less output if False"),
                ("quiet",                  False,                           "If True, output will only be sent to the log file if open (see below); if False, output will be sent to the console as well"),
                ("outfile_prefix",         None,                            "If None, parameter and tree files created will have a name beginning with the name of the data file; if provided, this prefix will form the first part of the parameter (e.g. <outfile_prefix>.p) and tree file (e.g. <outfile_prefix>.t) names"),
                ("default_model",          'hky',                           "Can be 'jc', 'hky' or 'gtr'"),
                ("relrate_prior",          ExponentialDist(1.0),            "The prior distribution for individual GTR relative rate parameters"),
                ("starting_relrates",      [1.0, 4.0, 1.0, 1.0, 4.0, 1.0] , "The starting values for GTR relative rates"),
                ("fix_relrates",           False,                           "If True, GTR relative rates will not be modified during the course of an MCMC analysis"),
                ("kappa_prior",            ExponentialDist(1.0),            "The prior distribution for the kappa parameter in an HKY model"),
                ("starting_kappa",         4.0,                             "The starting value for the kappa parameter in an HKY model"),
                ("fix_kappa",              False,                           "If True, the HKY kappa parameter will not be modified during the course of an MCMC analysis"),
                ("num_rates",              1,                               "The number of relative rates used for the discrete gamma rate heterogeneity submodel; default is rate homogeneity (i.e. 1 rate)"),
                ("gamma_shape_prior",      ExponentialDist(1.0),            "The prior distribution for the shape parameter of the gamma among-site rate distribution"),
                ("starting_shape",         0.5,                             "The starting value for the gamma shape parameter"),
                ("fix_shape",              False,                           "If True, the gamma shape parameter will not be modified during the course of an MCMC analysis"),
                ("use_inverse_shape",      False,                           "If True, gamma_shape_prior is applied to 1/shape rather than shape"),
                ("estimate_pinvar",        False,                           "If True, an invariable sites submodel will be applied and the parameter representing the proportion of invariable sites will be estimated"),
                ("pinvar_prior",           BetaDist(1.0, 1.0),              "The prior distribution for pinvar, the proportion of invariable sites parameter"),
                ("starting_pinvar",        0.2,                             "The starting value of pinvar, the proportion of invariable sites parameter"),
                ("fix_pinvar",             False,                           "If True, the proportion of invariable sites parameter (pinvar) will not be modified during the course of an MCMC analysis"),
                ("base_freq_param_prior",  ExponentialDist(1.0),            "The prior distribution for the individual base frequency parameters; these parameters, when normalized to sum to 1, represent the equilibrium proportions of the nucleotide states"),
                ("starting_freqs",         [1.0, 1.0, 1.0, 1.0],            "The starting values for the four base frequency parameters"),
                ("fix_freqs",              False,                           "If True, the base frequencies will not be modified during the course of an MCMC analysis"),
                ("data_source",            'file',                          "not yet documented"),
                ("data_file_name",         '',                              "Used to specify the nexus data file name to be used for subsequent analyses"),
                ("starting_tree_source",   'random',                        "Source of the starting tree topology: can be either 'random' or 'usertree'. Note that this setting does not determine the edge lengths in the starting tree, only the topology. Starting edge lengths are determined by the probability distribution specified in starting_edgelen_dist"),
                ("tree_topology",          None,                            "Unused unless starting_tree_source is 'usertree', in which case this should be a standard newick string representation of the tree topology; e.g. '(A:0.01,B:0.071,(C:0.013,D:0.021):0.037)'"),
                ("ls_move_lambda",         0.2,                             "The value of the tuning parameter for the Larget-Simon move"),
                ("ls_move_weight",         100,                             "Larget-Simon moves will be performed this many times per cycle"),
                ("ls_move_debug",          False,                           "If set to true, TreeViewer will popup on each Larget-Simon move update showing edges affected by the proposed move"),
                ("fix_topology",           False,                           "If True, an EdgeMove move will be substituted for the LargetSimonMove, so edge lengths will be updated by slice sampling but the topology will remain unchanged during an MCMC analysis"),
                ("edge_move_lambda",       0.2,                             "The value of the tuning parameter for the EdgeMove"),
                ("edge_move_weight",       0,                               "Only used if fix_topology is True. Makes sense to set this to some multiple of the number of edges since each EdgeMove affects a single randomly-chosen edge "),
                ("unimap_nni_move_weight", 100,                             "Unimap NNI moves will be performed this many times per cycle"),
                ("tree_scaler_weight",     0,                               "Whole-tree scaling will be performed this many times per cycle"),
                ("use_unimap",              False,                          "if True, MCMC analyses will use the uniformized mapping approach"),
                ("nielsen_move_weight",     1,                              "Nielsen mapping will be performed this many times per cycle"),
                ("allow_polytomies",        False,                          "If True, do Bush moves in addition to Larget-Simon moves; if False, do Larget-Simon moves only"),
                ("polytomy_prior",          True,                           "If True, use polytomy prior; if False, use resolution class prior"),
                ("topo_prior_C",            2.0,                            "Specifies the strength of the prior (C = 1 is flat prior; C > 1 favors less resolved topologies)"),
                ("bush_move_edgelen_mean",  1.0,                            "Specifies mean of exponential edge length generation distribution used by BushMove when new edges are created"),
                ("bush_move_weight",        100,                            "Bush moves will be performed this many times per cycle if"),
                ("bush_move_debug",         False,                          "If set to true, TreeViewer will pop up on each Bush move update showing edges affected by the proposed move"),
                ("slice_weight",            1,                              "Slice sampled parameters will be updated this many times per cycle"),
                ("slice_max_units",         1000,                           "Max. number of units used in slice sampling"),
                ("adapt_first",             100,                            "Adaptation of slice samplers is performed the first time at cycle adapt_first. Subsequent adaptations wait twice the number of cycles as the previous adaptation. Thus, adaptation n occurs at cycle adapt_first*(2^n - 1). The total number of adaptations that will occur during an MCMC run is [ln(adapt_first + ncycles) - ln(adapt_first)]/ln(2)"),
                ("adapt_simple_param",      0.5,                            "Slice sampler adaptation parameter"),
                ("using_hyperprior",        True,                           "not yet documented"),
                ("edgelen_hyperprior",      InverseGammaDist(2.1,1.0/1.1),  "not yet documented"),
                ("fix_edgelen_hyperparam",  False,                          "not yet documented"),
                ("starting_edgelen_hyperparam", 0.05,                       "not yet documented"),
                ("internal_edgelen_dist",   None,                           "Can be used to set a prior distribution for internal edges that differs from that applied to external edges. If this is set to something besides None, you should also set external_edgelen_dist appropriately. Setting the edgelen_dist property sets both external_edgelen_dist and internal_edgelen_dist to the same value"),
                ("external_edgelen_dist",   None,                           "Can be used to set a prior distribution for external edges that differs from that applied to internal edges. If this is set to something besides None, you should also set internal_edgelen_dist appropriately. Setting the edgelen_dist property sets both external_edgelen_dist and internal_edgelen_dist to the same value"),
                ("edgelen_dist",            ExponentialDist(2.0),           "Sets both internal_edgelen_dist and external_edgelen_dist to the supplied value. Use this setting if you want all edges in the tree to have the same prior distribution. Using this setting will overwrite any values previously supplied for internal_edgelen_dist and external_edgelen_dist"),
                ("fix_edgelens",            False,                          "not yet documented"),
                ("starting_edgelen_dist",  ExponentialDist(10.0),           "Used to select the starting edge lengths when starting_tree_source is 'random'"),
                ("heating_lambda",         0.2,                             "not yet documented"),
                ("nchains",                1,                               "not yet documented"),
                ("is_standard_heating",    True,                            "not yet documented"),
                ("use_flex_model",         False,                           "not yet documented"),
                ("flex_ncat_move_weight",  1,                               "Number of times each cycle to attempt an ncat move"),
                ("flex_num_spacers",       1,                               "Number of fake rates between each adjacent pair of real rates"),
                ("flex_phi",               0.25,                            "Proportion of ncat moves in which ncat is incremented (ncat is decremented with probability 1 - flex_phi)"),
                ("flex_L",                 1.0,                             "Upper bound of interval used for unnormalized relative rate parameter values"),
                ("flex_lambda",            1.0,                             "Parameter of Poisson prior on the number of extra categories"),
                ("flex_prob_param_prior",  ExponentialDist(1.0),            "not yet documented"),
                ("uf_num_edges",           50,                              "Number of edges to traverse before taking action to prevent underflow"),
                ("ntax",                   0,                               "To explore the prior, set to some positive value. Also set data_source to None"),
                )
        PhycasCommand.__init__(self, p, args, "mcmc", "The mcmc command is used to conduct a Bayesian Markov chain Monte Carlo analysis.")

    def __call__(self, **kwargs):
        self.set(**kwargs)
        mcmc_impl = MCMCImpl(self.phycas, self)
        mcmc_impl.run()
        
